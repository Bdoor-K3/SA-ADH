{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchEventsForOrganizer}from'../../services/api';import{useNavigate}from'react-router-dom';import'./OrganizerDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function OrganizerDashboard(){const[events,setEvents]=useState([]);const navigate=useNavigate();useEffect(()=>{const loadEvents=async()=>{try{const data=await fetchEventsForOrganizer();setEvents(data);}catch(error){console.error('Error fetching events for organizer:',error);}};loadEvents();},[]);const handleScanTickets=eventId=>{navigate(`/organizer/scan/${eventId}`);};return/*#__PURE__*/_jsxs(\"div\",{className:\"organizer-dashboard\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Organizer Dashboard\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Assigned Events\"}),/*#__PURE__*/_jsx(\"ul\",{children:events.map(event=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:event.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",new Date(event.dateOfEvent).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleScanTickets(event._id),children:\"Scan Tickets\"})]},event._id))})]});}export default OrganizerDashboard;","map":{"version":3,"names":["React","useState","useEffect","fetchEventsForOrganizer","useNavigate","jsx","_jsx","jsxs","_jsxs","OrganizerDashboard","events","setEvents","navigate","loadEvents","data","error","console","handleScanTickets","eventId","className","children","map","event","name","Date","dateOfEvent","toLocaleDateString","onClick","_id"],"sources":["C:/Users/Administrator/Desktop/Sa-adh/frontend/src/pages/organizer/OrganizerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchEventsForOrganizer } from '../../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './OrganizerDashboard.css';\r\n\r\nfunction OrganizerDashboard() {\r\n  const [events, setEvents] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const loadEvents = async () => {\r\n      try {\r\n        const data = await fetchEventsForOrganizer();\r\n        setEvents(data);\r\n      } catch (error) {\r\n        console.error('Error fetching events for organizer:', error);\r\n      }\r\n    };\r\n\r\n    loadEvents();\r\n  }, []);\r\n\r\n  const handleScanTickets = (eventId) => {\r\n    navigate(`/organizer/scan/${eventId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"organizer-dashboard\">\r\n      <h1>Organizer Dashboard</h1>\r\n      <h2>Assigned Events</h2>\r\n      <ul>\r\n        {events.map((event) => (\r\n          <li key={event._id}>\r\n            <h3>{event.name}</h3>\r\n            <p>Date: {new Date(event.dateOfEvent).toLocaleDateString()}</p>\r\n            <button onClick={() => handleScanTickets(event._id)}>Scan Tickets</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrganizerDashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,uBAAuB,KAAQ,oBAAoB,CAC5D,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAC5B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAAW,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAX,uBAAuB,CAAC,CAAC,CAC5CQ,SAAS,CAACG,IAAI,CAAC,CACjB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAC9D,CACF,CAAC,CAEDF,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,iBAAiB,CAAIC,OAAO,EAAK,CACrCN,QAAQ,CAAC,mBAAmBM,OAAO,EAAE,CAAC,CACxC,CAAC,CAED,mBACEV,KAAA,QAAKW,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCd,IAAA,OAAAc,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5Bd,IAAA,OAAAc,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBd,IAAA,OAAAc,QAAA,CACGV,MAAM,CAACW,GAAG,CAAEC,KAAK,eAChBd,KAAA,OAAAY,QAAA,eACEd,IAAA,OAAAc,QAAA,CAAKE,KAAK,CAACC,IAAI,CAAK,CAAC,cACrBf,KAAA,MAAAY,QAAA,EAAG,QAAM,CAAC,GAAI,CAAAI,IAAI,CAACF,KAAK,CAACG,WAAW,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAI,CAAC,cAC/DpB,IAAA,WAAQqB,OAAO,CAAEA,CAAA,GAAMV,iBAAiB,CAACK,KAAK,CAACM,GAAG,CAAE,CAAAR,QAAA,CAAC,cAAY,CAAQ,CAAC,GAHnEE,KAAK,CAACM,GAIX,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAAnB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}