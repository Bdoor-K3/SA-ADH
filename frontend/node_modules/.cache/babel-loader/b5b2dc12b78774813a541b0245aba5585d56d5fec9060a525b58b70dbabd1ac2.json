{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Sa-adh\\\\frontend\\\\src\\\\pages\\\\organizer\\\\OrganizerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchEventsForOrganizer } from '../../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport './OrganizerDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrganizerDashboard() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loadEvents = async () => {\n      try {\n        const data = await fetchEventsForOrganizer();\n        setEvents(data);\n      } catch (error) {\n        console.error('Error fetching events for organizer:', error);\n      }\n    };\n    loadEvents();\n  }, []);\n  const handleScanTickets = eventId => {\n    navigate(`/organizer/scan/${eventId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"organizer-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Organizer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assigned Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), events.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"event-list\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"event-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(event.dateOfEvent).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleScanTickets(event._id),\n          children: \"Scan Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, event._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-events\",\n      children: \"No assigned events found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(OrganizerDashboard, \"agCrRaRkxpwnLGNy5tzIH8WzeY8=\", false, function () {\n  return [useNavigate];\n});\n_c = OrganizerDashboard;\nexport default OrganizerDashboard;\nvar _c;\n$RefreshReg$(_c, \"OrganizerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","fetchEventsForOrganizer","useNavigate","jsxDEV","_jsxDEV","OrganizerDashboard","_s","events","setEvents","navigate","loadEvents","data","error","console","handleScanTickets","eventId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","event","name","Date","dateOfEvent","toLocaleDateString","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Sa-adh/frontend/src/pages/organizer/OrganizerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchEventsForOrganizer } from '../../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './OrganizerDashboard.css';\r\n\r\nfunction OrganizerDashboard() {\r\n  const [events, setEvents] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const loadEvents = async () => {\r\n      try {\r\n        const data = await fetchEventsForOrganizer();\r\n        setEvents(data);\r\n      } catch (error) {\r\n        console.error('Error fetching events for organizer:', error);\r\n      }\r\n    };\r\n\r\n    loadEvents();\r\n  }, []);\r\n\r\n  const handleScanTickets = (eventId) => {\r\n    navigate(`/organizer/scan/${eventId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"organizer-dashboard\">\r\n      <h1>Organizer Dashboard</h1>\r\n      <h2>Assigned Events</h2>\r\n      {events.length > 0 ? (\r\n        <ul className=\"event-list\">\r\n          {events.map((event) => (\r\n            <li key={event._id} className=\"event-item\">\r\n              <h3>{event.name}</h3>\r\n              <p>Date: {new Date(event.dateOfEvent).toLocaleDateString()}</p>\r\n              <button onClick={() => handleScanTickets(event._id)}>Scan Tickets</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"no-events\">No assigned events found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrganizerDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,oBAAoB;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMV,uBAAuB,CAAC,CAAC;QAC5CO,SAAS,CAACG,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IAEDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAIC,OAAO,IAAK;IACrCN,QAAQ,CAAC,mBAAmBM,OAAO,EAAE,CAAC;EACxC,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCb,OAAA;MAAAa,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjB,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBd,MAAM,CAACe,MAAM,GAAG,CAAC,gBAChBlB,OAAA;MAAIY,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBV,MAAM,CAACgB,GAAG,CAAEC,KAAK,iBAChBpB,OAAA;QAAoBY,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACxCb,OAAA;UAAAa,QAAA,EAAKO,KAAK,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBjB,OAAA;UAAAa,QAAA,GAAG,QAAM,EAAC,IAAIS,IAAI,CAACF,KAAK,CAACG,WAAW,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/DjB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMf,iBAAiB,CAACU,KAAK,CAACM,GAAG,CAAE;UAAAb,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHnEG,KAAK,CAACM,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELjB,OAAA;MAAGY,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAxCQD,kBAAkB;EAAA,QAERH,WAAW;AAAA;AAAA6B,EAAA,GAFrB1B,kBAAkB;AA0C3B,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}