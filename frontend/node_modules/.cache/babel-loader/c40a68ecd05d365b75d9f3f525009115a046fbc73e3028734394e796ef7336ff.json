{"ast":null,"code":"// Import axios for making HTTP requests\nimport axios from 'axios';\n\n// Set up a base instance with the backend URL from .env\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000'\n});\n// Add a request interceptor to include the Authorization header\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Get All Events\nexport const fetchEvents = async () => {\n  try {\n    const response = await api.get('/api/events');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\nexport const registerUser = async userData => {\n  return await api.post('/api/auth/register', userData);\n};\nexport const loginUser = async credentials => {\n  return await api.post('/api/auth/login', credentials);\n};\n\n// Create an Event\nexport const createEvent = async eventData => {\n  return await api.post('/api/events', eventData);\n};\n\n// Get Event by ID\nexport const getEventById = async id => {\n  try {\n    const response = await api.get(`/api/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching event by ID:', error);\n    throw error;\n  }\n};\n\n// Update an Event\nexport const updateEvent = async (eventId, updates) => {\n  return await api.put(`/api/events/${eventId}`, updates);\n};\n\n// Delete an Event\nexport const deleteEvent = async eventId => {\n  return await api.delete(`/api/events/${eventId}`);\n};\n\n// Fetch Logs\nexport const fetchLogs = async () => {\n  try {\n    const response = await api.get('/api/logs');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching logs:', error);\n    throw error;\n  }\n};\n\n// Fetch All Users\nexport const fetchUsers = async () => {\n  try {\n    const response = await api.get('/api/users');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n};\n\n// Fetch User by Email\nexport const fetchUserByEmail = async email => {\n  try {\n    const response = await api.get(`/api/users/email/${email}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user by email:', error);\n    throw error;\n  }\n};\n\n// Update User\nexport const updateUser = async (id, updates) => {\n  return await api.put(`/api/users/${id}`, updates);\n};\n\n// Delete User\nexport const deleteUser = async id => {\n  return await api.delete(`/api/users/${id}`);\n};\n\n// Purchase Ticket\nexport const purchaseTicket = async eventId => {\n  try {\n    const response = await api.post('/api/tickets/purchase', {\n      eventId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error purchasing ticket:', error);\n    throw error;\n  }\n};\n\n// Fetch User Profile\nexport const fetchUserProfile = async () => {\n  try {\n    const response = await api.get('/api/users/profile');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user profile:', error);\n    throw error;\n  }\n};\n\n// Export the instance for custom requests if needed\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_BACKEND_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","fetchEvents","response","get","data","console","registerUser","userData","post","loginUser","credentials","createEvent","eventData","getEventById","id","updateEvent","eventId","updates","put","deleteEvent","delete","fetchLogs","fetchUsers","fetchUserByEmail","email","updateUser","deleteUser","purchaseTicket","fetchUserProfile"],"sources":["C:/Users/Administrator/Desktop/e-ticketing/frontend/src/services/api.js"],"sourcesContent":["// Import axios for making HTTP requests\r\nimport axios from 'axios';\r\n\r\n// Set up a base instance with the backend URL from .env\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000',\r\n});\r\n// Add a request interceptor to include the Authorization header\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Get All Events\r\nexport const fetchEvents = async () => {\r\n  try {\r\n    const response = await api.get('/api/events');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching events:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n  export const registerUser = async (userData) => {\r\n    return await api.post('/api/auth/register', userData);\r\n  };\r\n  \r\n  export const loginUser = async (credentials) => {\r\n    return await api.post('/api/auth/login', credentials);\r\n  };\r\n\r\n\r\n// Create an Event\r\nexport const createEvent = async (eventData) => {\r\n  return await api.post('/api/events', eventData);\r\n};\r\n\r\n// Get Event by ID\r\nexport const getEventById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/api/events/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching event by ID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an Event\r\nexport const updateEvent = async (eventId, updates) => {\r\n  return await api.put(`/api/events/${eventId}`, updates);\r\n};\r\n\r\n// Delete an Event\r\nexport const deleteEvent = async (eventId) => {\r\n  return await api.delete(`/api/events/${eventId}`);\r\n};\r\n\r\n\r\n// Fetch Logs\r\nexport const fetchLogs = async () => {\r\n  try {\r\n    const response = await api.get('/api/logs');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching logs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch All Users\r\nexport const fetchUsers = async () => {\r\n  try {\r\n    const response = await api.get('/api/users');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching users:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch User by Email\r\nexport const fetchUserByEmail = async (email) => {\r\n  try {\r\n    const response = await api.get(`/api/users/email/${email}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user by email:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update User\r\nexport const updateUser = async (id, updates) => {\r\n  return await api.put(`/api/users/${id}`, updates);\r\n};\r\n\r\n// Delete User\r\nexport const deleteUser = async (id) => {\r\n  return await api.delete(`/api/users/${id}`);\r\n};\r\n\r\n// Purchase Ticket\r\nexport const purchaseTicket = async (eventId) => {\r\n  try {\r\n    const response = await api.post('/api/tickets/purchase', { eventId });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error purchasing ticket:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch User Profile\r\nexport const fetchUserProfile = async () => {\r\n  try {\r\n    const response = await api.get('/api/users/profile');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n  // Export the instance for custom requests if needed\r\nexport default api;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}