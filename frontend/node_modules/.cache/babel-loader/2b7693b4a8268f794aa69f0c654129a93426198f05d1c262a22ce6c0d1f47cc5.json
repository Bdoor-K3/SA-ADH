{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\e-ticketing\\\\frontend\\\\src\\\\pages\\\\admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchEvents, createEvent, deleteEvent, updateEvent, fetchLogs, fetchUsers, updateUser, deleteUser, fetchTickets } from '../../services/api';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [currentTab, setCurrentTab] = useState('events'); // 'events', 'users', 'tickets', 'logs'\n  const [events, setEvents] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [tickets, setTickets] = useState([]);\n  const [logs, setLogs] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    dateOfEvent: '',\n    price: '',\n    ticketsAvailable: '',\n    purchaseStartDate: '',\n    purchaseEndDate: ''\n  });\n  const [userFormData, setUserFormData] = useState({\n    fullName: '',\n    email: '',\n    phoneNumber: '',\n    address: {\n      city: '',\n      region: '',\n      address1: '',\n      address2: ''\n    },\n    age: '',\n    gender: '',\n    role: ''\n  });\n  const [editEventId, setEditEventId] = useState(null);\n  const [editUserId, setEditUserId] = useState(null);\n\n  // Fetch data for the current tab\n  useEffect(() => {\n    const loadEvents = async () => {\n      if (currentTab === 'events') {\n        const data = await fetchEvents();\n        setEvents(data);\n      }\n    };\n    const loadUsers = async () => {\n      if (currentTab === 'users') {\n        const data = await fetchUsers();\n        setUsers(data);\n      }\n    };\n    const loadTickets = async () => {\n      if (currentTab === 'tickets') {\n        const data = await fetchTickets();\n        setTickets(data);\n      }\n    };\n    const loadLogs = async () => {\n      if (currentTab === 'logs') {\n        const data = await fetchLogs();\n        setLogs(data);\n      }\n    };\n    if (currentTab === 'events') loadEvents();\n    if (currentTab === 'users') loadUsers();\n    if (currentTab === 'tickets') loadTickets();\n    if (currentTab === 'logs') loadLogs();\n  }, [currentTab]);\n\n  // Handle Create or Update Event\n  const handleEventSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editEventId) {\n        await updateEvent(editEventId, formData);\n        alert('Event updated successfully!');\n      } else {\n        await createEvent(formData);\n        alert('Event created successfully!');\n      }\n      setFormData({\n        name: '',\n        description: '',\n        dateOfEvent: '',\n        price: '',\n        ticketsAvailable: '',\n        purchaseStartDate: '',\n        purchaseEndDate: ''\n      });\n      setEditEventId(null);\n      const updatedEvents = await fetchEvents();\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error('Error creating/updating event:', error);\n    }\n  };\n\n  // Handle Delete Event\n  const handleDeleteEvent = async id => {\n    try {\n      await deleteEvent(id);\n      alert('Event deleted successfully!');\n      setEvents(events.filter(event => event._id !== id));\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  // Handle Edit Event\n  const handleEditEvent = event => {\n    setEditEventId(event._id);\n    setFormData({\n      name: event.name,\n      description: event.description,\n      dateOfEvent: event.dateOfEvent.slice(0, 10),\n      // Format date for input field\n      price: event.price,\n      ticketsAvailable: event.ticketsAvailable,\n      purchaseStartDate: event.purchaseStartDate.slice(0, 10),\n      purchaseEndDate: event.purchaseEndDate.slice(0, 10)\n    });\n  };\n\n  // Handle Create or Update User\n  const handleUserSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editUserId) {\n        await updateUser(editUserId, userFormData);\n        alert('User updated successfully!');\n      }\n      setUserFormData({\n        fullName: '',\n        email: '',\n        phoneNumber: '',\n        address: {\n          city: '',\n          region: '',\n          address1: '',\n          address2: ''\n        },\n        age: '',\n        gender: '',\n        role: ''\n      });\n      setEditUserId(null);\n      const updatedUsers = await fetchUsers();\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.error('Error creating/updating user:', error);\n    }\n  };\n\n  // Handle Delete User\n  const handleDeleteUser = async id => {\n    try {\n      await deleteUser(id);\n      alert('User deleted successfully!');\n      setUsers(users.filter(user => user._id !== id));\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n\n  // Handle Edit User\n  const handleEditUser = user => {\n    setEditUserId(user._id);\n    setUserFormData({\n      fullName: user.fullName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      address: user.address,\n      age: user.age,\n      gender: user.gender,\n      role: user.role\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab('events'),\n        children: \"Manage Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab('users'),\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab('tickets'),\n        children: \"Manage Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab('logs'),\n        children: \"View Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), currentTab === 'events' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editEventId ? 'Edit Event' : 'Create Event'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEventSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Event Name\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          placeholder: \"Description\",\n          value: formData.description,\n          onChange: e => setFormData({\n            ...formData,\n            description: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"dateOfEvent\",\n          value: formData.dateOfEvent,\n          onChange: e => setFormData({\n            ...formData,\n            dateOfEvent: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: formData.price,\n          onChange: e => setFormData({\n            ...formData,\n            price: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editEventId ? 'Update Event' : 'Create Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Existing Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditEvent(event),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteEvent(event._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)]\n        }, event._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), currentTab === 'users' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editUserId ? 'Edit User' : 'Manage Users'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUserSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"fullName\",\n          placeholder: \"Full Name\",\n          value: userFormData.fullName,\n          onChange: e => setUserFormData({\n            ...userFormData,\n            fullName: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: userFormData.email,\n          onChange: e => setUserFormData({\n            ...userFormData,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editUserId ? 'Update User' : 'Create User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Existing Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: user.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditUser(user),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteUser(user._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"mWHCCP82nAkDwFSLbbpqhO0eAyg=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","fetchEvents","createEvent","deleteEvent","updateEvent","fetchLogs","fetchUsers","updateUser","deleteUser","fetchTickets","jsxDEV","_jsxDEV","AdminDashboard","_s","currentTab","setCurrentTab","events","setEvents","users","setUsers","tickets","setTickets","logs","setLogs","formData","setFormData","name","description","dateOfEvent","price","ticketsAvailable","purchaseStartDate","purchaseEndDate","userFormData","setUserFormData","fullName","email","phoneNumber","address","city","region","address1","address2","age","gender","role","editEventId","setEditEventId","editUserId","setEditUserId","loadEvents","data","loadUsers","loadTickets","loadLogs","handleEventSubmit","e","preventDefault","alert","updatedEvents","error","console","handleDeleteEvent","id","filter","event","_id","handleEditEvent","slice","handleUserSubmit","updatedUsers","handleDeleteUser","user","handleEditUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","map","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/e-ticketing/frontend/src/pages/admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  fetchEvents,\r\n  createEvent,\r\n  deleteEvent,\r\n  updateEvent,\r\n  fetchLogs,\r\n  fetchUsers,\r\n  updateUser,\r\n  deleteUser,\r\n  fetchTickets,\r\n} from '../../services/api';\r\nimport './AdminDashboard.css';\r\n\r\nfunction AdminDashboard() {\r\n  const [currentTab, setCurrentTab] = useState('events'); // 'events', 'users', 'tickets', 'logs'\r\n  const [events, setEvents] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [tickets, setTickets] = useState([]);\r\n  const [logs, setLogs] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    dateOfEvent: '',\r\n    price: '',\r\n    ticketsAvailable: '',\r\n    purchaseStartDate: '',\r\n    purchaseEndDate: '',\r\n  });\r\n  const [userFormData, setUserFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    address: {\r\n      city: '',\r\n      region: '',\r\n      address1: '',\r\n      address2: '',\r\n    },\r\n    age: '',\r\n    gender: '',\r\n    role: '',\r\n  });\r\n  const [editEventId, setEditEventId] = useState(null);\r\n  const [editUserId, setEditUserId] = useState(null);\r\n\r\n  // Fetch data for the current tab\r\n  useEffect(() => {\r\n    const loadEvents = async () => {\r\n      if (currentTab === 'events') {\r\n        const data = await fetchEvents();\r\n        setEvents(data);\r\n      }\r\n    };\r\n\r\n    const loadUsers = async () => {\r\n      if (currentTab === 'users') {\r\n        const data = await fetchUsers();\r\n        setUsers(data);\r\n      }\r\n    };\r\n\r\n    const loadTickets = async () => {\r\n      if (currentTab === 'tickets') {\r\n        const data = await fetchTickets();\r\n        setTickets(data);\r\n      }\r\n    };\r\n\r\n    const loadLogs = async () => {\r\n      if (currentTab === 'logs') {\r\n        const data = await fetchLogs();\r\n        setLogs(data);\r\n      }\r\n    };\r\n\r\n    if (currentTab === 'events') loadEvents();\r\n    if (currentTab === 'users') loadUsers();\r\n    if (currentTab === 'tickets') loadTickets();\r\n    if (currentTab === 'logs') loadLogs();\r\n  }, [currentTab]);\r\n\r\n  // Handle Create or Update Event\r\n  const handleEventSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editEventId) {\r\n        await updateEvent(editEventId, formData);\r\n        alert('Event updated successfully!');\r\n      } else {\r\n        await createEvent(formData);\r\n        alert('Event created successfully!');\r\n      }\r\n      setFormData({\r\n        name: '',\r\n        description: '',\r\n        dateOfEvent: '',\r\n        price: '',\r\n        ticketsAvailable: '',\r\n        purchaseStartDate: '',\r\n        purchaseEndDate: '',\r\n      });\r\n      setEditEventId(null);\r\n      const updatedEvents = await fetchEvents();\r\n      setEvents(updatedEvents);\r\n    } catch (error) {\r\n      console.error('Error creating/updating event:', error);\r\n    }\r\n  };\r\n\r\n  // Handle Delete Event\r\n  const handleDeleteEvent = async (id) => {\r\n    try {\r\n      await deleteEvent(id);\r\n      alert('Event deleted successfully!');\r\n      setEvents(events.filter((event) => event._id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting event:', error);\r\n    }\r\n  };\r\n\r\n  // Handle Edit Event\r\n  const handleEditEvent = (event) => {\r\n    setEditEventId(event._id);\r\n    setFormData({\r\n      name: event.name,\r\n      description: event.description,\r\n      dateOfEvent: event.dateOfEvent.slice(0, 10), // Format date for input field\r\n      price: event.price,\r\n      ticketsAvailable: event.ticketsAvailable,\r\n      purchaseStartDate: event.purchaseStartDate.slice(0, 10),\r\n      purchaseEndDate: event.purchaseEndDate.slice(0, 10),\r\n    });\r\n  };\r\n\r\n  // Handle Create or Update User\r\n  const handleUserSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editUserId) {\r\n        await updateUser(editUserId, userFormData);\r\n        alert('User updated successfully!');\r\n      }\r\n      setUserFormData({\r\n        fullName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        address: {\r\n          city: '',\r\n          region: '',\r\n          address1: '',\r\n          address2: '',\r\n        },\r\n        age: '',\r\n        gender: '',\r\n        role: '',\r\n      });\r\n      setEditUserId(null);\r\n      const updatedUsers = await fetchUsers();\r\n      setUsers(updatedUsers);\r\n    } catch (error) {\r\n      console.error('Error creating/updating user:', error);\r\n    }\r\n  };\r\n\r\n  // Handle Delete User\r\n  const handleDeleteUser = async (id) => {\r\n    try {\r\n      await deleteUser(id);\r\n      alert('User deleted successfully!');\r\n      setUsers(users.filter((user) => user._id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting user:', error);\r\n    }\r\n  };\r\n\r\n  // Handle Edit User\r\n  const handleEditUser = (user) => {\r\n    setEditUserId(user._id);\r\n    setUserFormData({\r\n      fullName: user.fullName,\r\n      email: user.email,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      age: user.age,\r\n      gender: user.gender,\r\n      role: user.role,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h1>Admin Dashboard</h1>\r\n\r\n      {/* Tabs for Navigation */}\r\n      <div className=\"admin-tabs\">\r\n        <button onClick={() => setCurrentTab('events')}>Manage Events</button>\r\n        <button onClick={() => setCurrentTab('users')}>Manage Users</button>\r\n        <button onClick={() => setCurrentTab('tickets')}>Manage Tickets</button>\r\n        <button onClick={() => setCurrentTab('logs')}>View Logs</button>\r\n      </div>\r\n\r\n      {/* Events Tab */}\r\n      {currentTab === 'events' && (\r\n        <div>\r\n          <h2>{editEventId ? 'Edit Event' : 'Create Event'}</h2>\r\n          <form onSubmit={handleEventSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Event Name\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n              required\r\n            />\r\n            <textarea\r\n              name=\"description\"\r\n              placeholder=\"Description\"\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n              required\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              name=\"dateOfEvent\"\r\n              value={formData.dateOfEvent}\r\n              onChange={(e) => setFormData({ ...formData, dateOfEvent: e.target.value })}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"price\"\r\n              placeholder=\"Price\"\r\n              value={formData.price}\r\n              onChange={(e) => setFormData({ ...formData, price: e.target.value })}\r\n              required\r\n            />\r\n            <button type=\"submit\">{editEventId ? 'Update Event' : 'Create Event'}</button>\r\n          </form>\r\n\r\n          <h2>Existing Events</h2>\r\n          <ul>\r\n            {events.map((event) => (\r\n              <li key={event._id}>\r\n                <h3>{event.name}</h3>\r\n                <button onClick={() => handleEditEvent(event)}>Edit</button>\r\n                <button onClick={() => handleDeleteEvent(event._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Users Tab */}\r\n      {currentTab === 'users' && (\r\n        <div>\r\n          <h2>{editUserId ? 'Edit User' : 'Manage Users'}</h2>\r\n          <form onSubmit={handleUserSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n              placeholder=\"Full Name\"\r\n              value={userFormData.fullName}\r\n              onChange={(e) => setUserFormData({ ...userFormData, fullName: e.target.value })}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={userFormData.email}\r\n              onChange={(e) => setUserFormData({ ...userFormData, email: e.target.value })}\r\n              required\r\n            />\r\n            <button type=\"submit\">{editUserId ? 'Update User' : 'Create User'}</button>\r\n          </form>\r\n\r\n          <h2>Existing Users</h2>\r\n          <ul>\r\n            {users.map((user) => (\r\n              <li key={user._id}>\r\n                <h3>{user.fullName}</h3>\r\n                <button onClick={() => handleEditUser(user)}>Edit</button>\r\n                <button onClick={() => handleDeleteUser(user._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}