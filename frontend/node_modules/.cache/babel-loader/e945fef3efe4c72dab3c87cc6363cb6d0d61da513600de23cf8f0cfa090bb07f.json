{"ast":null,"code":"// Import axios for making HTTP requests\nimport axios from'axios';// Set up a base instance with the backend URL from .env\nconst api=axios.create({baseURL:process.env.REACT_APP_BACKEND_URL||'http://localhost:5000'});// Add a request interceptor to include the Authorization header\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Get All Events\nexport const fetchEvents=async()=>{try{const response=await api.get('/api/events');return response.data;}catch(error){console.error('Error fetching events:',error);throw error;}};export const registerUser=async userData=>{return await api.post('/api/auth/register',userData);};export const loginUser=async credentials=>{return await api.post('/api/auth/login',credentials);};export const createEvent=async eventData=>{try{const response=await api.post('/api/events',eventData);return response.data;}catch(error){console.error('Error creating event:',error);throw error;}};// Get Event by ID\nexport const getEventById=async id=>{try{const response=await api.get(`/api/events/${id}`);return response.data;}catch(error){console.error('Error fetching event by ID:',error);throw error;}};export const updateEvent=async(eventId,updates)=>{try{const response=await api.put(`/api/events/${eventId}`,updates);return response.data;}catch(error){console.error('Error updating event:',error);throw error;}};// Delete an Event\nexport const deleteEvent=async eventId=>{return await api.delete(`/api/events/${eventId}`);};// Fetch Logs\nexport const fetchLogs=async()=>{try{const response=await api.get('/api/logs');return response.data;}catch(error){console.error('Error fetching logs:',error);throw error;}};// Fetch All Users\nexport const fetchUsers=async()=>{try{const response=await api.get('/api/users');return response.data;}catch(error){console.error('Error fetching users:',error);throw error;}};// Fetch User by Email\nexport const fetchUserByEmail=async email=>{try{const response=await api.get(`/api/users/email/${email}`);return response.data;}catch(error){console.error('Error fetching user by email:',error);throw error;}};// Update User\nexport const updateUser=async(id,updates)=>{return await api.put(`/api/users/${id}`,updates);};// Delete User\nexport const deleteUser=async id=>{return await api.delete(`/api/users/${id}`);};// Purchase Ticket\nexport const purchaseTicket=async eventId=>{try{const response=await api.post('/api/tickets/purchase',{eventId});return response.data;}catch(error){console.error('Error purchasing ticket:',error);throw error;}};// Fetch User Profile\nexport const fetchUserProfile=async()=>{try{const response=await api.get('/api/users/profile');return response.data;}catch(error){console.error('Error fetching user profile:',error);throw error;}};export const fetchOrganizers=async()=>{try{const response=await api.get('/api/users/organizers');return response.data;// This includes _id, fullName, and email\n}catch(error){console.error('Error fetching organizers:',error);throw error;}};export const fetchEventsForOrganizer=async()=>{try{const response=await api.get('/api/events/organizer/events');return response.data;}catch(error){console.error('Error fetching events for organizer:',error);throw error;}};export const validateTicket=async(qrCodeData,eventId)=>{try{const response=await api.post('/api/tickets/validate',{qrCodeData,eventId});return response.data;}catch(error){throw error;}};export const verifyPayment=async tapId=>{try{const response=await api.get(`/api/tickets/payment/callback?tap_id=${tapId}`);return response.data;}catch(error){console.error('Error verifying payment:',error);throw error;}};// Export the instance for custom requests if needed\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_BACKEND_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","fetchEvents","response","get","data","console","registerUser","userData","post","loginUser","credentials","createEvent","eventData","getEventById","id","updateEvent","eventId","updates","put","deleteEvent","delete","fetchLogs","fetchUsers","fetchUserByEmail","email","updateUser","deleteUser","purchaseTicket","fetchUserProfile","fetchOrganizers","fetchEventsForOrganizer","validateTicket","qrCodeData","verifyPayment","tapId"],"sources":["C:/Users/Administrator/Desktop/Sa-adh/frontend/src/services/api.js"],"sourcesContent":["// Import axios for making HTTP requests\r\nimport axios from 'axios';\r\n\r\n// Set up a base instance with the backend URL from .env\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000',\r\n});\r\n// Add a request interceptor to include the Authorization header\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Get All Events\r\nexport const fetchEvents = async () => {\r\n  try {\r\n    const response = await api.get('/api/events');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching events:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n  export const registerUser = async (userData) => {\r\n    return await api.post('/api/auth/register', userData);\r\n  };\r\n  \r\n  export const loginUser = async (credentials) => {\r\n    return await api.post('/api/auth/login', credentials);\r\n  };\r\n\r\n\r\n  export const createEvent = async (eventData) => {\r\n    try {\r\n      const response = await api.post('/api/events', eventData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating event:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n// Get Event by ID\r\nexport const getEventById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/api/events/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching event by ID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateEvent = async (eventId, updates) => {\r\n  try {\r\n    const response = await api.put(`/api/events/${eventId}`, updates);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating event:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete an Event\r\nexport const deleteEvent = async (eventId) => {\r\n  return await api.delete(`/api/events/${eventId}`);\r\n};\r\n\r\n\r\n// Fetch Logs\r\nexport const fetchLogs = async () => {\r\n  try {\r\n    const response = await api.get('/api/logs');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching logs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch All Users\r\nexport const fetchUsers = async () => {\r\n  try {\r\n    const response = await api.get('/api/users');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching users:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch User by Email\r\nexport const fetchUserByEmail = async (email) => {\r\n  try {\r\n    const response = await api.get(`/api/users/email/${email}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user by email:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update User\r\nexport const updateUser = async (id, updates) => {\r\n  return await api.put(`/api/users/${id}`, updates);\r\n};\r\n\r\n// Delete User\r\nexport const deleteUser = async (id) => {\r\n  return await api.delete(`/api/users/${id}`);\r\n};\r\n\r\n// Purchase Ticket\r\nexport const purchaseTicket = async (eventId) => {\r\n  try {\r\n    const response = await api.post('/api/tickets/purchase', { eventId });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error purchasing ticket:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch User Profile\r\nexport const fetchUserProfile = async () => {\r\n  try {\r\n    const response = await api.get('/api/users/profile');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchOrganizers = async () => {\r\n  try {\r\n    const response = await api.get('/api/users/organizers');\r\n    return response.data; // This includes _id, fullName, and email\r\n  } catch (error) {\r\n    console.error('Error fetching organizers:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchEventsForOrganizer = async () => {\r\n  try {\r\n    const response = await api.get('/api/events/organizer/events');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching events for organizer:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateTicket = async (qrCodeData, eventId) => {\r\n  try {\r\n    const response = await api.post('/api/tickets/validate', { qrCodeData, eventId });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const verifyPayment = async (tapId) => {\r\n  try {\r\n    const response = await api.get(`/api/tickets/payment/callback?tap_id=${tapId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error verifying payment:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n  // Export the instance for custom requests if needed\r\nexport default api;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}