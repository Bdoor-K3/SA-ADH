{"ast":null,"code":"import React,{useState}from'react';import QrScanner from'react-qr-scanner';// Install this library\nimport{validateTicket}from'../../services/api';// Add API call\nimport'./ScanTickets.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ScanTickets(){const[scanResult,setScanResult]=useState('');const[validationMessage,setValidationMessage]=useState('');const[errorMessage,setErrorMessage]=useState('');const handleScan=async data=>{if(data){setScanResult(data);try{// Validate ticket by sending QR code data and event ID to the backend\nconst eventId=window.location.pathname.split('/').pop();// Get event ID from URL\nconst response=await validateTicket(data.text,eventId);setValidationMessage(response.message);setErrorMessage('');// Clear error message\n}catch(error){var _error$response,_error$response$data;setValidationMessage('');// Clear validation message\nsetErrorMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Error validating ticket.');}}};const handleError=err=>{console.error('Error scanning QR code:',err);setErrorMessage('Error scanning QR code. Please try again.');};const previewStyle={height:240,width:320};return/*#__PURE__*/_jsxs(\"div\",{className:\"scan-tickets\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Scan Tickets\"}),/*#__PURE__*/_jsx(QrScanner,{delay:300,style:previewStyle,onError:handleError,onScan:handleScan}),scanResult&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Scanned Data: \",scanResult]}),validationMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:validationMessage}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errorMessage})]});}export default ScanTickets;","map":{"version":3,"names":["React","useState","QrScanner","validateTicket","jsx","_jsx","jsxs","_jsxs","ScanTickets","scanResult","setScanResult","validationMessage","setValidationMessage","errorMessage","setErrorMessage","handleScan","data","eventId","window","location","pathname","split","pop","response","text","message","error","_error$response","_error$response$data","handleError","err","console","previewStyle","height","width","className","children","delay","style","onError","onScan"],"sources":["C:/Users/Administrator/Desktop/Sa-adh/frontend/src/pages/organizer/ScanTickets.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QrScanner from 'react-qr-scanner'; // Install this library\r\nimport { validateTicket } from '../../services/api'; // Add API call\r\nimport './ScanTickets.css';\r\n\r\nfunction ScanTickets() {\r\n  const [scanResult, setScanResult] = useState('');\r\n  const [validationMessage, setValidationMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleScan = async (data) => {\r\n    if (data) {\r\n      setScanResult(data);\r\n\r\n      try {\r\n        // Validate ticket by sending QR code data and event ID to the backend\r\n        const eventId = window.location.pathname.split('/').pop(); // Get event ID from URL\r\n        const response = await validateTicket(data.text, eventId);\r\n\r\n        setValidationMessage(response.message);\r\n        setErrorMessage(''); // Clear error message\r\n      } catch (error) {\r\n        setValidationMessage(''); // Clear validation message\r\n        setErrorMessage(error.response?.data?.message || 'Error validating ticket.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error('Error scanning QR code:', err);\r\n    setErrorMessage('Error scanning QR code. Please try again.');\r\n  };\r\n\r\n  const previewStyle = {\r\n    height: 240,\r\n    width: 320,\r\n  };\r\n\r\n  return (\r\n    <div className=\"scan-tickets\">\r\n      <h1>Scan Tickets</h1>\r\n      <QrScanner\r\n        delay={300}\r\n        style={previewStyle}\r\n        onError={handleError}\r\n        onScan={handleScan}\r\n      />\r\n      {scanResult && <p>Scanned Data: {scanResult}</p>}\r\n      {validationMessage && <p className=\"success\">{validationMessage}</p>}\r\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScanTickets;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,kBAAkB,CAAE;AAC1C,OAASC,cAAc,KAAQ,oBAAoB,CAAE;AACrD,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACU,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEpD,KAAM,CAAAc,UAAU,CAAG,KAAO,CAAAC,IAAI,EAAK,CACjC,GAAIA,IAAI,CAAE,CACRN,aAAa,CAACM,IAAI,CAAC,CAEnB,GAAI,CACF;AACA,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAE;AAC3D,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAApB,cAAc,CAACa,IAAI,CAACQ,IAAI,CAAEP,OAAO,CAAC,CAEzDL,oBAAoB,CAACW,QAAQ,CAACE,OAAO,CAAC,CACtCX,eAAe,CAAC,EAAE,CAAC,CAAE;AACvB,CAAE,MAAOY,KAAK,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACdhB,oBAAoB,CAAC,EAAE,CAAC,CAAE;AAC1BE,eAAe,CAAC,EAAAa,eAAA,CAAAD,KAAK,CAACH,QAAQ,UAAAI,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBX,IAAI,UAAAY,oBAAA,iBAApBA,oBAAA,CAAsBH,OAAO,GAAI,0BAA0B,CAAC,CAC9E,CACF,CACF,CAAC,CAED,KAAM,CAAAI,WAAW,CAAIC,GAAG,EAAK,CAC3BC,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEI,GAAG,CAAC,CAC7ChB,eAAe,CAAC,2CAA2C,CAAC,CAC9D,CAAC,CAED,KAAM,CAAAkB,YAAY,CAAG,CACnBC,MAAM,CAAE,GAAG,CACXC,KAAK,CAAE,GACT,CAAC,CAED,mBACE3B,KAAA,QAAK4B,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/B,IAAA,OAAA+B,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB/B,IAAA,CAACH,SAAS,EACRmC,KAAK,CAAE,GAAI,CACXC,KAAK,CAAEN,YAAa,CACpBO,OAAO,CAAEV,WAAY,CACrBW,MAAM,CAAEzB,UAAW,CACpB,CAAC,CACDN,UAAU,eAAIF,KAAA,MAAA6B,QAAA,EAAG,gBAAc,CAAC3B,UAAU,EAAI,CAAC,CAC/CE,iBAAiB,eAAIN,IAAA,MAAG8B,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEzB,iBAAiB,CAAI,CAAC,CACnEE,YAAY,eAAIR,IAAA,MAAG8B,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAEvB,YAAY,CAAI,CAAC,EACrD,CAAC,CAEV,CAEA,cAAe,CAAAL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}